# GreenLightPA Terraform Outputs
# Output values for production infrastructure

# VPC Outputs
output "vpc_id" {
  description = "ID of the VPC"
  value       = module.vpc.vpc_id
}

output "vpc_cidr_block" {
  description = "CIDR block of the VPC"
  value       = module.vpc.vpc_cidr_block
}

output "private_subnet_ids" {
  description = "IDs of the private subnets"
  value       = module.vpc.private_subnet_ids
}

output "database_subnet_ids" {
  description = "IDs of the database subnets"
  value       = module.vpc.database_subnet_ids
}

# EKS Outputs
output "eks_cluster_id" {
  description = "EKS cluster ID"
  value       = module.eks.cluster_id
}

output "eks_cluster_arn" {
  description = "EKS cluster ARN"
  value       = module.eks.cluster_arn
}

output "eks_cluster_endpoint" {
  description = "EKS cluster endpoint"
  value       = module.eks.cluster_endpoint
  sensitive   = true
}

output "eks_cluster_name" {
  description = "EKS cluster name"
  value       = module.eks.cluster_name
}

output "eks_cluster_certificate_authority_data" {
  description = "Base64 encoded certificate data required to communicate with the cluster"
  value       = module.eks.cluster_certificate_authority_data
  sensitive   = true
}

output "eks_node_security_group_id" {
  description = "Security group ID of the EKS node group"
  value       = module.eks.node_security_group_id
}

# RDS Outputs
output "rds_instance_id" {
  description = "RDS instance ID"
  value       = module.rds.instance_id
}

output "rds_instance_arn" {
  description = "RDS instance ARN"
  value       = module.rds.instance_arn
}

output "rds_endpoint" {
  description = "RDS instance endpoint"
  value       = module.rds.endpoint
  sensitive   = true
}

output "rds_port" {
  description = "RDS instance port"
  value       = module.rds.port
}

output "database_name" {
  description = "Name of the database"
  value       = var.database_name
}

output "database_username" {
  description = "Master username for the database"
  value       = var.database_username
  sensitive   = true
}

# ElastiCache Outputs
output "redis_cluster_id" {
  description = "ElastiCache Redis cluster ID"
  value       = module.elasticache.cluster_id
}

output "redis_endpoint" {
  description = "ElastiCache Redis endpoint"
  value       = module.elasticache.endpoint
  sensitive   = true
}

output "redis_port" {
  description = "ElastiCache Redis port"
  value       = module.elasticache.port
}

# KMS Outputs
output "kms_key_id" {
  description = "KMS key ID for encryption"
  value       = module.kms.key_id
}

output "kms_key_arn" {
  description = "KMS key ARN for encryption"
  value       = module.kms.key_arn
}

# S3 Outputs
output "backup_bucket_name" {
  description = "S3 bucket name for backups"
  value       = module.s3.bucket_name
}

output "backup_bucket_arn" {
  description = "S3 bucket ARN for backups"
  value       = module.s3.bucket_arn
}

# Monitoring Outputs
output "sns_topic_arn" {
  description = "SNS topic ARN for alerts"
  value       = module.alerts.sns_topic_arn
}

# Connection Strings (for application configuration)
output "database_url" {
  description = "Database connection URL"
  value       = "postgresql://${var.database_username}:${var.database_password}@${module.rds.endpoint}:${module.rds.port}/${var.database_name}"
  sensitive   = true
}

output "redis_url" {
  description = "Redis connection URL"
  value       = "redis://${module.elasticache.endpoint}:${module.elasticache.port}/0"
  sensitive   = true
}

# Kubernetes Configuration
output "kubeconfig" {
  description = "kubectl config as generated by the module"
  value = {
    cluster_name                         = module.eks.cluster_name
    endpoint                            = module.eks.cluster_endpoint
    cluster_ca_certificate              = module.eks.cluster_certificate_authority_data
    cluster_security_group_id           = module.eks.cluster_security_group_id
    node_security_group_id              = module.eks.node_security_group_id
  }
  sensitive = true
} 